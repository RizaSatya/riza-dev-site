<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>GCP on Riza Dev</title>
    <link>https://riza.netlify.app/tags/gcp/</link>
    <description>Recent content in GCP on Riza Dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://riza.netlify.app/tags/gcp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[DRAFT] Building a Canary Deployment Infrastructure in GCP</title>
      <link>https://riza.netlify.app/blog/canary-deployment-gcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://riza.netlify.app/blog/canary-deployment-gcp/</guid>
      <description>Introduction Let&amp;rsquo;s face it, pushing new code to production can be nerve-wracking. One tiny bug and suddenly you&amp;rsquo;re putting out fires instead of sipping your well-earned coffee. That&amp;rsquo;s where canary deployments come in handy. They let you dip your toes in the water before diving in headfirst. In this article, we&amp;rsquo;re going to walk through setting up a canary deployment system on Google Cloud Platform (GCP) using Terraform. We&amp;rsquo;ll be working with regional managed instance groups, load balancers, and some traffic-splitting magic to get a solid canary setup going.</description>
    </item>
    
    <item>
      <title>[DRAFT] Streamlining Application Infrastructure: A Platform Team&#39;s Approach</title>
      <link>https://riza.netlify.app/blog/gitlab-pipeline-infra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://riza.netlify.app/blog/gitlab-pipeline-infra/</guid>
      <description>Introduction As a platform team, our goal is to empower developers with easy-to-use tools for creating infrastructure. Our Internal Developer Portal offers a suite of tools to enhance developers&amp;rsquo; daily workflows. In this article, we&amp;rsquo;ll focus on a key feature: onboarding an application with a single click.
Background Our cloud provider is Google Cloud Platform (GCP) We use Terraform for infrastructure configuration This article focuses on VM-based applications While we won&amp;rsquo;t dive deep into the Terraform details in this article, it&amp;rsquo;s important to note that we create infrastructure by defining Terraform resources.</description>
    </item>
    
    <item>
      <title>[DRAFT] Optimizing Developer Workflows: Our Internal Developer Platform</title>
      <link>https://riza.netlify.app/blog/dev-platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://riza.netlify.app/blog/dev-platform/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
